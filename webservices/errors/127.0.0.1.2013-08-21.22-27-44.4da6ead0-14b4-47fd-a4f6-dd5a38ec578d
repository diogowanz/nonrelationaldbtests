(dp1
S'output'
p2
S"<type 'exceptions.MemoryError'> "
p3
sS'layer'
p4
S'/home/wanzeller/www-dev/web2py/applications/webservices/controllers/sample.py'
p5
sS'code'
p6
S'# coding: utf8\n# tente algo como\ndef index(): return dict(message="hello from sample.py")\n\n#import mongo\nmodel = local_import(\'mongo\')\n#model = local_import(\'postgres_dict\')\n\n\nfrom gluon.tools import Service\nservice = Service(globals())\n\nModel = model.Model()\n    \n@service.xmlrpc\n@service.soap(\'insereOrgao\',returns={\'s\':str},args={\'cnpj\':str, \'nome\':str, \'endereco\':str, \'cidade\':str, \'uf\':str})\ndef insereOrgao(cnpj,nome,endereco,cidade,uf):\n    s = Model.insereOrgao(cnpj,nome,endereco,cidade,uf)\n    return s\n    \n@service.xmlrpc\n@service.soap(\'insereEmpregado\',returns={\'s\':str},args={\'nome\':str, \'dt_contratacao\':str, \'dt_desligamento\':str, \'dt_nascimento\':str, \'nu_matricula\':str, \'rg\':str, \'cpf\':str, \'id_orgao\':str, \'documentos\':str, \'dependentes\':str})\ndef insereEmpregado(nome,dt_contratacao,dt_desligamento,dt_nascimento,nu_matricula,rg,cpf,id_orgao,documentos,dependentes):\n    s = Model.insereEmpregado(nome,dt_contratacao,dt_desligamento,dt_nascimento,nu_matricula,rg,cpf,id_orgao,documentos,dependentes)\n    return s\n    \n@service.xmlrpc\n@service.soap(\'insereDependente\',returns={\'s\':str},args={\'nome\':str, \'rg\':str, \'cpf\':str, \'certidao\':str, \'dt_nascimento\':str, \'tp_vinculo\':str, \'documentos\':str, \'nu_matricula_responsavel\':str})\ndef insereDependente(nome,rg,cpf,certidao,dt_nascimento,tp_vinculo,documentos,nu_matricula_responsavel):\n    s = Model.insereDependente(nome,rg,cpf,certidao,dt_nascimento,tp_vinculo,documentos,nu_matricula_responsavel)\n    return s\n    \n@service.xmlrpc\n@service.soap(\'insereDocEmpregado\',returns={\'s\':str},args={\'matricula\':str, \'tp_documento\':str, \'no_doc\':str, \'file\':str})\ndef insereDocEmpregado(matricula,tp_documento, no_doc,file):\n    s = Model.insereDocEmpregado(matricula,tp_documento, no_doc,file)\n    return s\n\n@service.xmlrpc\n@service.soap(\'insereDocDependente\',returns={\'s\':str},args={\'empreg_matricula\':str, \'rg_dependente\':str, \'cpf_dependente\':str, \'certidao_dependente\':str,\'tp_documento\':str,\'no_doc\':str,\'file\':str})\ndef insereDocDependente(empreg_matricula, rg_dependente,cpf_dependente,certidao_dependente,tp_documento, no_doc,file):\n    s = Model.insereDocDependente(empreg_matricula, rg_dependente,cpf_dependente,certidao_dependente,tp_documento, no_doc,file)\n    return s\n\n@service.xmlrpc\n@service.soap(\'listaOrgao\',returns={ \'orgaos\': [{\'orgao\': {\'id_orgao\':str,\'nu_cnpj\':str,\'no_orgao\':str,\'no_endereco\': str,\'no_cidade\':str,\'no_uf\':str}}]},\nargs={\'nome\':str, \'endereco\':str, \'cidade\':str, \'uf\':str})\ndef listaOrgaos(nome,endereco,cidade,uf):\n\torgaos = Model.listaOrgaos(nome,endereco,cidade,uf)\n\ty = []\n\tfor orgao in orgaos:\n\t\tx = dict()\n\t\tx[\'orgao\'] = orgao\n\t\ty.append(x)\n\torgaos = y\n\treturn orgaos\n\n@service.xmlrpc\n@service.soap(\'listaEmpregados\',returns={ \'empregados\': [{\'empregado\': {\'id_empregado\':str,\'no_empregado\':str,\'dt_contratacao\':str,\'dt_desligamento\':str,\'dt_nascimento\':str,\'nu_matricula\':str,\'nu_rg\':str,\'nu_cpf\':str,\'id_orgao\':str,\'Documentos\':str,\'Dependentes\':str}}]},\nargs={\'nome\':str, \'dt_contratacao\':str, \'dt_desligamento\':str, \'dt_nascimento\':str, \'nu_matricula\':str})\ndef listaEmpregados(nome,dt_contratacao,dt_desligamento,dt_nascimento,nu_matricula):\n\tempregados = Model.listaEmpregados(nome,dt_contratacao,dt_desligamento,dt_nascimento,nu_matricula)\n\ty = []\n\tfor empregado in empregados:\n\t\tx = dict()\n\t\tx[\'empregado\'] = empregado\n\t\ty.append(x)\n\tempregados = y\n\treturn empregados\n\n@service.xmlrpc\n@service.soap(\'listaDependentes\',returns={ \'dependentes\': [{\'dependente\': {\'id_empregado_dependente\':str,\'no_empregado_dependente\':str,\'nu_rg\':str,\'nu_cpf\':str,\'nu_certidao\':str,\'dt_nascimento\':str,\'tp_vinculo\':str,\'Documentos\':str}}]},\nargs={\'nomeEmpregado\':str, \'nomeDependente\':str, \'matricula\':str, \'dt_nascimento\':str, \'tp_vinculo\':str})\ndef listaDependentes(nomeEmpregado,nomeDependente,matricula,dt_nascimento,tp_vinculo):\n\tdependentes = Model.listaDependentes(nomeEmpregado,nomeDependente,matricula,dt_nascimento,tp_vinculo)\n\ty = []\n\tfor dependente in dependentes:\n\t\tx = dict()\n\t\tx[\'dependente\'] = dependente\n\t\ty.append(x)\n\tdependentes = y\n\treturn dependentes\n\ndef call():\n    return service()\n\nresponse._vars=response._caller(call)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/wanzeller/www-dev/web2py/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/home/wanzeller/www-dev/web2py/applications/webservices/controllers/sample.py", line 87, in <module>\n  File "/home/wanzeller/www-dev/web2py/gluon/globals.py", line 194, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/wanzeller/www-dev/web2py/applications/webservices/controllers/sample.py", line 85, in call\n    return service()\n  File "/home/wanzeller/www-dev/web2py/gluon/tools.py", line 4711, in __call__\n    return self.serve_soap()\n  File "/home/wanzeller/www-dev/web2py/gluon/tools.py", line 4619, in serve_soap\n    return dispatcher.dispatch(request.body.read())\n  File "/home/wanzeller/www-dev/web2py/gluon/contrib/pysimplesoap/server.py", line 244, in dispatch\n    return response.as_xml(pretty=self.pretty)\n  File "/home/wanzeller/www-dev/web2py/gluon/contrib/pysimplesoap/simplexml.py", line 231, in as_xml\n    return self.__document.toxml(\'UTF-8\')\n  File "/usr/lib/python2.6/xml/dom/minidom.py", line 45, in toxml\n    return self.toprettyxml("", "", encoding)\n  File "/usr/lib/python2.6/xml/dom/minidom.py", line 57, in toprettyxml\n    self.writexml(writer, "", indent, newl, encoding)\n  File "/usr/lib/python2.6/xml/dom/minidom.py", line 1749, in writexml\n    node.writexml(writer, indent, addindent, newl)\n  File "/usr/lib/python2.6/xml/dom/minidom.py", line 817, in writexml\n    node.writexml(writer,indent+addindent,addindent,newl)\n  File "/usr/lib/python2.6/xml/dom/minidom.py", line 817, in writexml\n    node.writexml(writer,indent+addindent,addindent,newl)\n  File "/usr/lib/python2.6/xml/dom/minidom.py", line 817, in writexml\n    node.writexml(writer,indent+addindent,addindent,newl)\n  File "/usr/lib/python2.6/xml/dom/minidom.py", line 817, in writexml\n    node.writexml(writer,indent+addindent,addindent,newl)\n  File "/usr/lib/python2.6/xml/dom/minidom.py", line 815, in writexml\n    writer.write(">%s"%(newl))\n  File "/usr/lib/python2.6/codecs.py", line 352, in write\n    self.stream.write(data)\n  File "/usr/lib/python2.6/StringIO.py", line 221, in write\n    self.buflist.append(s)\nMemoryError\n'
p11
s.